LRacer is a Common Lisp API for accessing a Racer Server.LRacer comes with complete source code.LRacer is based on TCP.Load the file lracer-sysdcl.lisp and evaluate (compile-load-racer "<<<directory to where you copied lracer>>>")Afterwards all Racer functions and macros documented in theUsers' Guide and Reference Manuals can be used directly fromLisp.? (instance i a)T? (instance i (not a))T? (check-abox-coherence)ABox DEFAULT is incoherentIndividual I contains a primitive clash for concept ADependencies for clashing constraint 0/5(I A): NILDependencies for clashing constraint 0/5(I -A): NILNIL? For each function call a connection to a RacerPro server is opened.In order to speed up communication time you can group a set of forms with(with-server-connection () ...)in order to reuse socket connections (faster). Example:(with-server-connection () (print (all-tboxes)) (print (all-aboxes)))The functions (open-server-connection &key (host *default-racer-host*)(port *default-racer-tcp-port*)) and close-server-connection can be used to explicitly open and close the server connection.You can set the variables*default-racer-host* (default "localhost")*default-racer-tcp-port* (default 8080)to fit your environment.