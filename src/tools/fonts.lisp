;;; -*- Mode: Lisp; Syntax: Ansi-Common-Lisp; Package: GUI-TOOLS; Base: 10 -*-

(cl:in-package gui-tools)

;;;
;;;
;;;

(eval-when (:compile-toplevel :load-toplevel :execute)

  (defparameter *y-to-x* 1.5)

  (defparameter *char-to-font-function*
    (make-array 256))

  (defparameter *char-to-font-def*
    (make-array 256))

  (defparameter *strings* (make-hash-table :size 10000))

  ;;;
  ;;;
  ;;;

  (defun get-code (char)
    (let* ((vectors (second char))
	   (measures (third char))
	   (x-measures (first measures))
	   #| (y-measures (second measures)) |#
	   (xstart (first x-measures))
	   (xend (second x-measures))
	 
	   #| (ystart (first y-measures))
	 (yend (second y-measures)) |#
	 
	   (delta (abs (- xstart xend)))
	   (code nil))

      (dolist (line vectors)
        (let* ((p1 (first line))
	       (p2 (second line))
	       (x1 (- (first p1) xstart))
	       (x2 (- (first p2) xstart))
	       (y1  (- (second p1)))
	       (y2  (- (second p2))))
	  (push 	 
	   `(medium-draw-line*
	     stream
	     (+ xoff ,x1) (+ yoff ,y1) (+ xoff ,x2) (+ yoff ,y2))
	   code)))
      `(progn
         ,@code
         ,delta)))


  (defun get-full-code (char)
    (princ char) (terpri)
    (let* ((namex (first char))
	   (name
	    (typecase namex
	      (string 
	       (elt namex 0))
	      (character namex)))
           (char-code (char-code name))
	 
	   (dummy-var1 (gensym))
	   (dummy-var2 (gensym))
	   (dummy-var3 (gensym)))

      (values 
       `(lambda (stream xoff yoff)
          (let ((,dummy-var1 stream)
                (,dummy-var2 xoff)
                (,dummy-var3 yoff))
            (declare (ignore ,dummy-var1 ,dummy-var2 ,dummy-var3))
            ,(get-code char)))
       char-code)))

  (defconstant +char-definitions+
    '((" " nil ((-1 1) (-1 1)))("," (((-1 11/17) (-2/3 15/17)) ((-2/3 15/17) (-2/3 23/17)) ((-2/3 23/17) (-1 27/17)) ((-1 27/17) (-2/3 27/17)) ((-2/3 27/17) (-1/3 23/17)) ((-1/3 23/17) (-1/3 15/17)) ((-1/3 15/17) (-2/3 11/17)) ((-2/3 11/17) (-1 11/17))) ((-1 -1/3) (11/17 27/17))) ("." (((-1 7/17) (-1 15/17)) ((-1 15/17) (-1/3 15/17)) ((-1/3 15/17) (-1/3 7/17)) ((-1/3 7/17) (-1 7/17))) ((-1 -1/3) (7/17 15/17))) ("Ü" (((2/3 -1) (1 -21/17)) ((1 -21/17) (2/3 -25/17)) ((2/3 -25/17) (1/3 -21/17)) ((1/3 -21/17) (2/3 -1)) ((-1 -21/17) (-2/3 -25/17)) ((-2/3 -25/17) (-1/3 -21/17)) ((-1/3 -21/17) (-2/3 -1)) ((-2/3 -1) (-1 -21/17)) ((1 -1) (1 7/17)) ((1 7/17) (1/3 15/17)) ((1/3 15/17) (-1/3 15/17)) ((-1/3 15/17) (-1 7/17)) ((-1 7/17) (-1 -1))) ((-1 1) (-25/17 15/17))) 
   ("Ä" (((-2/3 -1) (-1 -21/17)) ((-1 -21/17) (-2/3 -25/17)) ((-2/3 -25/17) (-1/3 -21/17)) ((-1/3 -21/17) (-2/3 -1)) ((2/3 -1) (1/3 -21/17)) ((1/3 -21/17) (2/3 -25/17)) ((2/3 -25/17) (1 -21/17)) ((1 -21/17) (2/3 -1)) ((-1 15/17) (0 -1)) ((-2/3 3/17) (2/3 3/17)) ((1 15/17) (0 -1))) ((-1 1) (-25/17 15/17))) ("Ö" (((2/3 -1) (1/3 -21/17)) ((1/3 -21/17) (2/3 -25/17)) ((2/3 -25/17) (1 -21/17)) ((1 -21/17) (2/3 -1)) ((-2/3 -1) (-1 -21/17)) ((-1 -21/17) (-2/3 -25/17)) ((-2/3 -25/17) (-1/3 -21/17)) ((-1/3 -21/17) (-2/3 -1)) ((-1/3 -1) (-1 -9/17)) ((-1 -9/17) (-1 7/17)) ((-1 7/17) (-1/3 15/17)) ((-1/3 15/17) (1/3 15/17)) ((1/3 15/17) (1 7/17)) ((1 7/17) (1 -9/17)) ((1 -9/17) (1/3 -1)) ((1/3 -1) (-1/3 -1))) ((-1 1) (-25/17 15/17))) 
   ("ß" (((-1 7/17) (-1/3 15/17)) ((-1/3 15/17) (1/3 15/17)) ((1/3 15/17) (2/3 11/17)) ((2/3 11/17) (2/3 7/17)) ((2/3 7/17) (2/3 3/17)) ((2/3 3/17) (1/3 -5/17)) ((1/3 -5/17) (-2/3 -5/17)) ((-2/3 -5/17) (1/3 -5/17)) ((1/3 -5/17) (2/3 -9/17)) ((2/3 -9/17) (2/3 -13/17)) ((2/3 -13/17) (1/3 -1)) ((1/3 -1) (-1/3 -1)) ((-1/3 -1) (-1 -13/17)) ((-1 -13/17) (-1 15/17))) ((-1 2/3) (-1 15/17))) ("ü" (((1/3 -9/17) (2/3 -13/17)) ((2/3 -13/17) (1/3 -1)) ((1/3 -1) (0 -13/17)) ((0 -13/17) (1/3 -9/17)) ((-1/3 -9/17) (0 -13/17)) ((0 -13/17) (-1/3 -1)) ((-1/3 -1) (-2/3 -13/17)) ((-2/3 -13/17) (-1/3 -9/17)) ((-1 -5/17) (-1 7/17)) ((-1 7/17) (-1/3 15/17)) ((-1/3 15/17) (1/3 15/17)) ((1/3 15/17) (1 7/17)) ((1 -5/17) (1 15/17))) ((-1 1) (-1 15/17))) 
   ("ö" (((1/3 -9/17) (2/3 -13/17)) ((2/3 -13/17) (1/3 -1)) ((1/3 -1) (0 -13/17)) ((0 -13/17) (1/3 -9/17)) ((-1/3 -9/17) (-2/3 -13/17)) ((-2/3 -13/17) (-1/3 -1)) ((-1/3 -1) (0 -13/17)) ((0 -13/17) (-1/3 -9/17)) ((-1/3 -5/17) (1/3 -5/17)) ((1/3 -5/17) (1 3/17)) ((1 3/17) (1 7/17)) ((1 7/17) (1/3 15/17)) ((1/3 15/17) (-1/3 15/17)) ((-1/3 15/17) (-1 7/17)) ((-1 7/17) (-1 3/17)) ((-1 3/17) (-1/3 -5/17))) ((-1 1) (-1 15/17))) ("ä" (((-1/3 -9/17) (-2/3 -13/17)) ((-2/3 -13/17) (-1/3 -1)) ((-1/3 -1) (0 -13/17)) ((0 -13/17) (-1/3 -9/17)) ((1/3 -9/17) (0 -13/17)) ((0 -13/17) (1/3 -1)) ((1/3 -1) (2/3 -13/17)) ((2/3 -13/17) (1/3 -9/17)) ((1 7/17) (1/3 15/17)) ((1/3 15/17) (-1/3 15/17)) ((-1/3 15/17) (-1 7/17)) ((-1 7/17) (-1 3/17)) ((-1 3/17) (-1/3 -5/17)) ((-1/3 -5/17) (1/3 -5/17)) ((1/3 -5/17) (1 3/17)) ((1 -5/17) (1 15/17))) ((-1 1) (-1 15/17))) ("z" (((1 15/17) (-1 15/17)) ((-1 15/17) (1 -5/17)) ((1 -5/17) (-1 -5/17))) ((-1 1) (-5/17 15/17))) 
   ("y" (((1/3 27/17) (2/3 11/17)) ((1 -5/17) (2/3 11/17)) ((2/3 11/17) (-1 -5/17))) ((-1 1) (-5/17 27/17))) ("x" (((1 -5/17) (-1 15/17)) ((1 15/17) (-1 -5/17))) ((-1 1) (-5/17 15/17))) ("w" (((1 -5/17) (1/3 15/17)) ((1/3 15/17) (0 3/17)) ((0 3/17) (-1/3 15/17)) ((-1/3 15/17) (-1 -5/17))) ((-1 1) (-5/17 15/17))) ("v" (((1 -5/17) (0 15/17)) ((0 15/17) (-1 -5/17))) ((-1 1) (-5/17 15/17))) ("u" (((-1 -5/17) (-1 7/17)) ((-1 7/17) (-1/3 15/17)) ((-1/3 15/17) (1/3 15/17)) ((1/3 15/17) (1 7/17)) ((1 -5/17) (1 15/17))) ((-1 1) (-5/17 15/17))) ("t" (((2/3 -1/17) (-2/3 -1/17)) ((1 11/17) (2/3 15/17)) ((2/3 15/17) (1/3 15/17)) ((1/3 15/17) (0 11/17)) ((0 11/17) (0 -1))) ((-2/3 1) (-1 15/17))) ("s" (((1 -1/17) (1/3 -5/17)) ((1/3 -5/17) (-1/3 -5/17)) ((-1/3 -5/17) (-1 -1/17)) ((-1 -1/17) (-1 3/17)) ((-1 3/17) (1 7/17)) ((1 7/17) (1 11/17)) ((1 11/17) (1/3 15/17)) ((1/3 15/17) (-1/3 15/17)) ((-1/3 15/17) (-1 11/17))) ((-1 1) (-5/17 15/17))) 
   ("r" (((1 3/17) (1/3 -5/17)) ((1/3 -5/17) (-1/3 -5/17)) ((-1/3 -5/17) (-1 3/17)) ((-1 15/17) (-1 -5/17))) ((-1 1) (-5/17 15/17))) ("q" (((1 7/17) (1/3 15/17)) ((1/3 15/17) (-1/3 15/17)) ((-1/3 15/17) (-1 7/17)) ((-1 7/17) (-1 3/17)) ((-1 3/17) (-1/3 -5/17)) ((-1/3 -5/17) (1/3 -5/17)) ((1/3 -5/17) (1 3/17)) ((1 27/17) (1 -5/17))) ((-1 1) (-5/17 27/17))) ("p" (((-1 7/17) (-1/3 15/17)) ((-1/3 15/17) (1/3 15/17)) ((1/3 15/17) (1 7/17)) ((1 7/17) (1 3/17)) ((1 3/17) (1/3 -5/17)) ((1/3 -5/17) (-1/3 -5/17)) ((-1/3 -5/17) (-1 3/17)) ((-1 27/17) (-1 -5/17))) ((-1 1) (-5/17 27/17))) ("o" (((-1/3 -5/17) (-1 3/17)) ((-1 3/17) (-1 7/17)) ((-1 7/17) (-1/3 15/17)) ((-1/3 15/17) (1/3 15/17)) ((1/3 15/17) (1 7/17)) ((1 7/17) (1 3/17)) ((1 3/17) (1/3 -5/17)) ((1/3 -5/17) (-1/3 -5/17))) ((-1 1) (-5/17 15/17))) ("n" (((1 15/17) (1 3/17)) ((1 3/17) (1/3 -5/17)) ((1/3 -5/17) (-1/3 -5/17)) ((-1/3 -5/17) (-1 3/17)) ((-1 15/17) (-1 -5/17))) ((-1 1) (-5/17 15/17))) 
   ("m" (((0 15/17) (0 3/17)) ((1 15/17) (1 3/17)) ((1 3/17) (2/3 -5/17)) ((2/3 -5/17) (1/3 -5/17)) ((1/3 -5/17) (0 3/17)) ((0 3/17) (-1/3 -5/17)) ((-1/3 -5/17) (-2/3 -5/17)) ((-2/3 -5/17) (-1 3/17)) ((-1 15/17) (-1 -5/17))) ((-1 1) (-5/17 15/17))) ("l" (((1/3 15/17) (0 15/17)) ((0 15/17) (0 -1))) ((0 1/3) (-1 15/17))) ("k" (((1 15/17) (-1 3/17)) ((-1 3/17) (2/3 -9/17)) ((2/3 -9/17) (-1 3/17)) ((-1 15/17) (-1 -1))) ((-1 1) (-1 15/17))) ("j" (((0 -9/17) (-1/3 -13/17)) ((-1/3 -13/17) (0 -1)) ((0 -1) (1/3 -13/17)) ((1/3 -13/17) (0 -9/17)) ((-1 19/17) (-2/3 23/17)) ((-2/3 23/17) (-1/3 23/17)) ((-1/3 23/17) (0 15/17)) ((0 15/17) (0 -1/17))) ((-1 1/3) (-1 23/17))) ("i" (((0 -9/17) (-1/3 -13/17)) ((-1/3 -13/17) (0 -1)) ((0 -1) (1/3 -13/17)) ((1/3 -13/17) (0 -9/17)) ((0 15/17) (0 -1/17))) ((-1/3 1/3) (-1 15/17))) ("h" (((1 15/17) (1 3/17)) ((1 3/17) (1/3 -5/17)) ((1/3 -5/17) (-1/3 -5/17)) ((-1/3 -5/17) (-1 3/17)) ((-1 15/17) (-1 -1))) ((-1 1) (-1 15/17))) 
   ("g" (((1 3/17) (1/3 -5/17)) ((1/3 -5/17) (-1/3 -5/17)) ((-1/3 -5/17) (-1 3/17)) ((-1 3/17) (-1 7/17)) ((-1 7/17) (-1/3 15/17)) ((-1/3 15/17) (1/3 15/17)) ((1/3 15/17) (1 7/17)) ((-1 23/17) (-1/3 27/17)) ((-1/3 27/17) (1/3 27/17)) ((1/3 27/17) (1 23/17)) ((1 23/17) (1 -5/17))) ((-1 1) (-5/17 27/17))) ("f" (((1/3 -1/17) (-1 -1/17)) ((2/3 -13/17) (1/3 -1)) ((1/3 -1) (0 -1)) ((0 -1) (-1/3 -13/17)) ((-1/3 -13/17) (-1/3 -5/17)) ((-1/3 -5/17) (-1/3 15/17))) ((-1 2/3) (-1 15/17))) ("e" (((1 11/17) (2/3 15/17)) ((2/3 15/17) (-1/3 15/17)) ((-1/3 15/17) (-1 11/17)) ((-1 11/17) (-1 3/17)) ((-1 3/17) (-1/3 -5/17)) ((-1/3 -5/17) (-1 3/17)) ((-1 3/17) (1 3/17)) ((1 3/17) (1/3 -5/17)) ((1/3 -5/17) (-1/3 -5/17))) ((-1 1) (-5/17 15/17))) ("d" (((1 3/17) (1/3 -5/17)) ((1/3 -5/17) (-1/3 -5/17)) ((-1/3 -5/17) (-1 3/17)) ((-1 3/17) (-1 7/17)) ((-1 7/17) (-1/3 15/17)) ((-1/3 15/17) (1/3 15/17)) ((1/3 15/17) (1 7/17)) ((1 15/17) (1 -1))) ((-1 1) (-1 15/17))) 
   ("c" (((1 11/17) (1/3 15/17)) ((1/3 15/17) (-1/3 15/17)) ((-1/3 15/17) (-1 7/17)) ((-1 7/17) (-1 3/17)) ((-1 3/17) (-1/3 -5/17)) ((-1/3 -5/17) (1/3 -5/17)) ((1/3 -5/17) (1 -1/17))) ((-1 1) (-5/17 15/17))) ("b" (((-1 3/17) (-1/3 -5/17)) ((-1/3 -5/17) (1/3 -5/17)) ((1/3 -5/17) (1 3/17)) ((1 3/17) (1 7/17)) ((1 7/17) (1/3 15/17)) ((1/3 15/17) (-1/3 15/17)) ((-1/3 15/17) (-1 7/17)) ((-1 15/17) (-1 -1))) ((-1 1) (-1 15/17))) ("a" (((1 3/17) (1/3 -5/17)) ((1/3 -5/17) (-1/3 -5/17)) ((-1/3 -5/17) (-1 3/17)) ((-1 3/17) (-1 7/17)) ((-1 7/17) (-1/3 15/17)) ((-1/3 15/17) (1/3 15/17)) ((1/3 15/17) (1 7/17)) ((1 15/17) (1 -5/17)) ((1 -5/17) (1 -5/17))) ((-1 1) (-5/17 15/17))) ("9" (((1 -5/17) (1/3 -1/17)) ((1/3 -1/17) (-1/3 -1/17)) ((-1/3 -1/17) (-1 -5/17)) ((-1 -5/17) (-1 -13/17)) ((-1 -13/17) (-1/3 -1)) ((-1 11/17) (-1/3 15/17)) ((-1/3 15/17) (1/3 15/17)) ((1/3 15/17) (1 7/17)) ((1 7/17) (1 -13/17)) ((1 -13/17) (1/3 -1)) ((1/3 -1) (-1/3 -1))) ((-1 1) (-1 15/17))) 
   ("8" (((1/3 -1/17) (1 3/17)) ((1 3/17) (1 11/17)) ((1 11/17) (2/3 15/17)) ((2/3 15/17) (-2/3 15/17)) ((-2/3 15/17) (-1 11/17)) ((-1 11/17) (-1 3/17)) ((-1 3/17) (-1/3 -1/17)) ((-1/3 -1) (-2/3 -13/17)) ((-2/3 -13/17) (-2/3 -5/17)) ((-2/3 -5/17) (-1/3 -1/17)) ((-1/3 -1/17) (1/3 -1/17)) ((1/3 -1/17) (2/3 -5/17)) ((2/3 -5/17) (2/3 -13/17)) ((2/3 -13/17) (1/3 -1)) ((1/3 -1) (-1/3 -1))) ((-1 1) (-1 15/17))) ("7" (((-1/3 15/17) (1 -1)) ((1 -1) (-1 -1))) ((-1 1) (-1 15/17))) ("6" (((-1 3/17) (-1/3 -1/17)) ((-1/3 -1/17) (1/3 -1/17)) ((1/3 -1/17) (1 3/17)) ((1 3/17) (1 11/17)) ((1 11/17) (1/3 15/17)) ((1/3 15/17) (-1/3 15/17)) ((-1/3 15/17) (-1 11/17)) ((-1 11/17) (-1 -1/17)) ((-1 -1/17) (-2/3 -9/17)) ((-2/3 -9/17) (2/3 -1))) ((-1 1) (-1 15/17))) ("5" (((-1 11/17) (-2/3 15/17)) ((-2/3 15/17) (1/3 15/17)) ((1/3 15/17) (1 11/17)) ((1 11/17) (1 -1/17)) ((1 -1/17) (1/3 -5/17)) ((1/3 -5/17) (-1 -5/17)) ((-1 -5/17) (-1 -1)) ((-1 -1) (1 -1))) ((-1 1) (-1 15/17))) 
   ("4" (((0 15/17) (0 -13/17)) ((1 -1/17) (-1 -1/17)) ((-1 -1/17) (-1/3 -1))) ((-1 1) (-1 15/17))) ("3" (((-1 7/17) (-1 11/17)) ((-1 11/17) (-1/3 15/17)) ((-1/3 15/17) (1/3 15/17)) ((1/3 15/17) (1 11/17)) ((1 11/17) (1 3/17)) ((1 3/17) (1/3 -1/17)) ((1/3 -1/17) (-2/3 -1/17)) ((-2/3 -1/17) (1/3 -1/17)) ((1/3 -1/17) (1 -5/17)) ((1 -5/17) (1 -13/17)) ((1 -13/17) (1/3 -1)) ((1/3 -1) (-1/3 -1)) ((-1/3 -1) (-1 -13/17)) ((-1 -13/17) (-1 -9/17))) ((-1 1) (-1 15/17))) ("2" (((-1 -9/17) (-1 -13/17)) ((1 15/17) (-1 15/17)) ((-1 15/17) (1 -5/17)) ((1 -5/17) (1 -13/17)) ((1 -13/17) (1/3 -1)) ((1/3 -1) (-1/3 -1)) ((-1/3 -1) (-1 -13/17))) ((-1 1) (-1 15/17))) ("1" (((2/3 15/17) (2/3 -1)) ((2/3 -1) (-1 -1/17))) ((-1 2/3) (-1 15/17))) ("0" (((1 -1) (-1 15/17)) ((-1 -1) (-1 15/17)) ((-1 15/17) (1 15/17)) ((1 15/17) (1 -1)) ((1 -1) (-1 -1))) ((-1 1) (-1 15/17))) ("Z" (((1 15/17) (-1 15/17)) ((-1 15/17) (1 -1)) ((1 -1) (-1 -1))) ((-1 1) (-1 15/17))) 
   ("Y" (((0 15/17) (0 -1/17)) ((1 -1) (0 -1/17)) ((0 -1/17) (-1 -1))) ((-1 1) (-1 15/17))) ("X" (((1 -1) (-1 15/17)) ((1 15/17) (-1 -1))) ((-1 1) (-1 15/17))) ("W" (((1 -1) (2/3 15/17)) ((2/3 15/17) (0 -1/17)) ((0 -1/17) (-2/3 15/17)) ((-2/3 15/17) (-1 -1))) ((-1 1) (-1 15/17))) ("V" (((1 -1) (0 15/17)) ((0 15/17) (-1 -1))) ((-1 1) (-1 15/17))) ("U" (((1 -1) (1 7/17)) ((1 7/17) (1/3 15/17)) ((1/3 15/17) (-1/3 15/17)) ((-1/3 15/17) (-1 7/17)) ((-1 7/17) (-1 -1))) ((-1 1) (-1 15/17))) ("T" (((0 15/17) (0 -1)) ((1 -1) (-1 -1))) ((-1 1) (-1 15/17))) ("S" (((-1 11/17) (-1/3 15/17)) ((-1/3 15/17) (1/3 15/17)) ((1/3 15/17) (1 11/17)) ((1 11/17) (1 3/17)) ((1 3/17) (1/3 -1/17)) ((1/3 -1/17) (-1/3 -1/17)) ((-1/3 -1/17) (-1 -5/17)) ((-1 -5/17) (-1 -13/17)) ((-1 -13/17) (-1/3 -1)) ((-1/3 -1) (1/3 -1)) ((1/3 -1) (1 -13/17))) ((-1 1) (-1 15/17))) 
   ("R" (((1 15/17) (-1 -1/17)) ((-1 -1/17) (1/3 -1/17)) ((1/3 -1/17) (1 -5/17)) ((1 -5/17) (1 -13/17)) ((1 -13/17) (1/3 -1)) ((1/3 -1) (-1 -1)) ((-1 -1) (-1 15/17))) ((-1 1) (-1 15/17))) ("Q" (((1 19/17) (0 -1/17)) ((-1 -9/17) (-1/3 -1)) ((-1/3 -1) (1/3 -1)) ((1/3 -1) (1 -9/17)) ((1 -9/17) (1 7/17)) ((1 7/17) (1/3 15/17)) ((1/3 15/17) (-1/3 15/17)) ((-1/3 15/17) (-1 7/17)) ((-1 7/17) (-1 -9/17))) ((-1 1) (-1 19/17))) ("P" (((-1 -1/17) (1/3 -1/17)) ((1/3 -1/17) (1 -5/17)) ((1 -5/17) (1 -13/17)) ((1 -13/17) (1/3 -1)) ((1/3 -1) (-1 -1)) ((-1 -1) (-1 15/17))) ((-1 1) (-1 15/17))) ("O" (((1 -9/17) (1 7/17)) ((1 7/17) (1/3 15/17)) ((1/3 15/17) (-1/3 15/17)) ((-1/3 15/17) (-1 7/17)) ((-1 7/17) (-1 -9/17)) ((-1 -9/17) (-1/3 -1)) ((-1/3 -1) (1/3 -1)) ((1/3 -1) (1 -9/17))) ((-1 1) (-1 15/17))) ("N" (((1 -1) (1 15/17)) ((1 15/17) (-1 -1)) ((-1 -1) (-1 15/17))) ((-1 1) (-1 15/17))) ("M" (((1 15/17) (1 -1)) ((1 -1) (0 -1/17)) ((0 -1/17) (-1 -1)) ((-1 -1) (-1 15/17))) ((-1 1) (-1 15/17))) 
   ("L" (((1 15/17) (-1 15/17)) ((-1 15/17) (-1 -1))) ((-1 1) (-1 15/17))) ("K" (((1 -1) (-1 -1/17)) ((1 15/17) (-1 -1/17)) ((-1 15/17) (-1 -1))) ((-1 1) (-1 15/17))) ("G" (((-1/3 -1/17) (1 -1/17)) ((1 -1/17) (1 7/17)) ((1 7/17) (1/3 15/17)) ((1/3 15/17) (-1/3 15/17)) ((-1/3 15/17) (-1 7/17)) ((-1 7/17) (-1 -9/17)) ((-1 -9/17) (-1/3 -1)) ((-1/3 -1) (1/3 -1)) ((1/3 -1) (1 -9/17))) ((-1 1) (-1 15/17))) ("J" (((-1 7/17) (-1/3 15/17)) ((-1/3 15/17) (1/3 15/17)) ((1/3 15/17) (1 7/17)) ((1 7/17) (1 -1)) ((1 -1) (-1 -1))) ((-1 1) (-1 15/17))) ("I" (((0 15/17) (0 -1))) ((0 0) (-1 15/17))) ("H" (((-1 -1/17) (1 -1/17)) ((1 -1) (1 15/17)) ((-1 15/17) (-1 -1))) ((-1 1) (-1 15/17))) ("F" (((-1 15/17) (-1 -1/17)) ((1 -1) (-1 -1)) ((-1 -1) (-1 -1/17)) ((-1 -1/17) (0 -1/17)) ((0 -1/17) (1/3 -1/17))) ((-1 1) (-1 15/17))) ("E" (((1/3 -1/17) (-1 -1/17)) ((1 15/17) (-1 15/17)) ((-1 15/17) (-1 -1)) ((-1 -1) (1 -1))) ((-1 1) (-1 15/17))) 
   ("D" (((-1 -1) (1/3 -1)) ((1/3 -1) (1 -9/17)) ((1 -9/17) (1 7/17)) ((1 7/17) (1/3 15/17)) ((1/3 15/17) (-1 15/17)) ((-1 15/17) (-1 -1))) ((-1 1) (-1 15/17))) ("C" (((1 7/17) (2/3 15/17)) ((2/3 15/17) (-2/3 15/17)) ((-2/3 15/17) (-1 3/17)) ((-1 3/17) (-1 -5/17)) ((-1 -5/17) (-2/3 -1)) ((-2/3 -1) (2/3 -1)) ((2/3 -1) (1 -9/17))) ((-1 1) (-1 15/17))) ("B" (((-1 -1) (1/3 -1)) ((1/3 -1) (1 -13/17)) ((1 -13/17) (1 -5/17)) ((1 -5/17) (2/3 -1/17)) ((2/3 -1/17) (-1 -1/17)) ((-1 -1/17) (2/3 -1/17)) ((2/3 -1/17) (1 3/17)) ((1 3/17) (1 11/17)) ((1 11/17) (2/3 15/17)) ((2/3 15/17) (-1 15/17)) ((-1 15/17) (-1 -1))) ((-1 1) (-1 15/17))) ("A" (((-2/3 3/17) (2/3 3/17)) ((1 15/17) (0 -1)) ((0 -1) (-1 15/17))) ((-1 1) (-1 15/17)))))

  #| (with-open-file (stream
                     "dlmaps:fonts;char3n"
                     :direction :input)
      (read stream)))
 |#

  (defmacro compile-font ()
    (let ((code nil))    
      (dolist (char +char-definitions+)		            
        (multiple-value-bind (draw-code char-code)
            (get-full-code char)
          (setf (svref *char-to-font-def* char-code)
                (get-code char))
          (push `(setf (svref *char-to-font-function* ,char-code)
                       ,draw-code)
                code)))
      `(progn ,@code)))

  (compile-font)

)

#|
(defun draw-vector-text (string stream)
  (let ((x 0))
    (with-scaling (stream 1.0 *y-to-x*)
      (map nil 
           #'(lambda (char) 
               (let* ((char-code (char-code char))
                      (fn (svref *char-to-font-function* char-code)))
	         (incf x 0.3)
	         (incf x
		       (if fn
		           (funcall
		            fn
		            stream x 1.2)
		         (funcall (svref *char-to-font-function*
                                         (char-code #\space))
			          stream x 1.2)))))
           string))))
|#

(defun draw-vector-text (string stream &key compile-p)
  (let ((x 0))
    (with-scaling (stream 1.0 *y-to-x*)
      (if (not compile-p)
          (map nil 
               #'(lambda (char) 
                   (let* ((char-code (char-code char))
                          (fn (svref *char-to-font-function* char-code)))
	             (incf x 0.3)
	             (incf x
		           (if fn
		               (funcall
		                fn
		                stream x 1.2)
		             (funcall (svref *char-to-font-function*
                                             (char-code #\space))
			              stream x 1.2)))))
               string)
        (let ((draw-code 
               (gethash string *strings*)))
          (if draw-code 
              (funcall draw-code stream x 1.2)
            (let ((def 
                   `(lambda (stream xoff yoff)
                      ,@(apply #'append 
                               (map 'list
                                    #'(lambda (char)
                                        (let* ((char-code (char-code char))
                                               (def (svref *char-to-font-def* char-code)))
                                          (if def
                                              `((incf xoff 0.3)
                                                (incf xoff
                                                      ,def))
                                            (let* ((char-code (char-code #\space))
                                                   (def (svref *char-to-font-def* char-code)))
                                              `((incf xoff 0.3)
                                                (incf xoff
                                                      ,def))))))
                                    string)))))
              (let ((code (compile nil def)))
                (setf (gethash string *strings*) code)              
                (funcall code stream x 1.2)))))))))
