(((racer-answer-query (quote (?x eve)) (quote (not (?x eve (:constraint (has-father has-mother age) (has-mother has-mother age) >=)))) :timeout *timeout* :abox (or *abox* (current-abox))) (((?x charles) ($?eve charles)) ((?x doris) ($?eve charles)) ((?x james) ($?eve charles)) ((?x eve) ($?eve charles)) ((?x betty) ($?eve charles)) ((?x alice) ($?eve charles)) ((?x charles) ($?eve doris)) ((?x doris) ($?eve doris)) ((?x james) ($?eve doris)) ((?x eve) ($?eve doris)) ((?x betty) ($?eve doris)) ((?x alice) ($?eve doris)) ((?x charles) ($?eve james)) ((?x doris) ($?eve james)) ((?x james) ($?eve james)) ((?x eve) ($?eve james)) ((?x betty) ($?eve james)) ((?x alice) ($?eve james)) ((?x charles) ($?eve betty)) ((?x doris) ($?eve betty)) ((?x james) ($?eve betty)) ((?x eve) ($?eve betty)) ((?x betty) ($?eve betty)) ((?x alice) ($?eve betty)) ((?x charles) ($?eve alice)) ((?x doris) ($?eve alice)) ((?x james) ($?eve alice)) ((?x eve) ($?eve alice)) ((?x betty) ($?eve alice)) ((?x alice) ($?eve alice)) ((?x charles) ($?eve eve)) ((?x doris) ($?eve eve)) ((?x james) ($?eve eve)) ((?x betty) ($?eve eve)) ((?x alice) ($?eve eve))) res-equal-p))
